{
  "openapi": "3.0.0",
  "info": {
    "title": "Zopper E-commerce Authentication API",
    "description": "Complete User Authentication API for E-commerce project using session-based authentication",
    "version": "1.0.0",
    "contact": {
      "name": "Zopper E-commerce Team",
      "email": "support@zopper.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account with name, email, and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "User registered successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string", "example": "64f8a1b2c3d4e5f6a7b8c9d0" },
                            "name": { "type": "string", "example": "John Doe" },
                            "email": { "type": "string", "example": "john@example.com" },
                            "role": { "type": "string", "example": "customer" },
                            "createdAt": { "type": "string", "format": "date-time" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user with email and password, creates session",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "headers": {
              "Set-Cookie": {
                "description": "Session cookie",
                "schema": {
                  "type": "string",
                  "example": "connect.sid=s%3A..."
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Login successful" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string", "example": "64f8a1b2c3d4e5f6a7b8c9d0" },
                            "name": { "type": "string", "example": "John Doe" },
                            "email": { "type": "string", "example": "john@example.com" },
                            "role": { "type": "string", "example": "customer" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "description": "Destroy user session and logout",
        "security": [{ "SessionAuth": [] }],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Logout successful" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user profile",
        "description": "Get logged-in user's profile information",
        "security": [{ "SessionAuth": [] }],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "User profile retrieved successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string", "example": "64f8a1b2c3d4e5f6a7b8c9d0" },
                            "name": { "type": "string", "example": "John Doe" },
                            "email": { "type": "string", "example": "john@example.com" },
                            "role": { "type": "string", "example": "customer" },
                            "isActive": { "type": "boolean", "example": true },
                            "createdAt": { "type": "string", "format": "date-time" },
                            "updatedAt": { "type": "string", "format": "date-time" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/auth/session": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Check session status",
        "description": "Check if user is currently logged in",
        "responses": {
          "200": {
            "description": "Session status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "User is logged in" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "isLoggedIn": { "type": "boolean", "example": true },
                        "userId": { "type": "string", "example": "64f8a1b2c3d4e5f6a7b8c9d0" },
                        "role": { "type": "string", "example": "customer" },
                        "email": { "type": "string", "example": "john@example.com" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["Utility"],
        "summary": "Health check",
        "description": "Check server status and connectivity",
        "responses": {
          "200": {
            "description": "Server is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Server is running" },
                    "timestamp": { "type": "string", "format": "date-time" },
                    "environment": { "type": "string", "example": "development" }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": false },
          "message": { "type": "string", "example": "Error description" },
          "error": { "type": "string", "example": "Error type or details" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "64f8a1b2c3d4e5f6a7b8c9d0" },
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "john@example.com" },
          "role": { "type": "string", "enum": ["customer", "admin"], "example": "customer" },
          "isActive": { "type": "boolean", "example": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      }
    },
    "securitySchemes": {
      "SessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid",
        "description": "Session-based authentication using cookies"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and session management"
    },
    {
      "name": "Utility",
      "description": "Utility endpoints for health checks and API information"
    }
  ]
}
